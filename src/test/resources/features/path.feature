Feature: 지하철 경로 관련 기능
# Given 상행역 : 도곡역 / 하행역 : 학여울역 / 길이 : 6 / 시간 : 4
#       상행역 : 학여울역 / 하행역 : 수서역 / 길이 : 10 / 시간 : 5 인 구간들이 존재하는 노선을 생성한다.
# Given 상행역 : 도곡역 / 하행역 : 개포동역 / 길이 : 4 / 시간 : 5
#       상행역 : 개포동역 / 하행역 : 수서역 / 길이 : 8 / 시간 : 5 인 구간들이 존재하는 노선을 생성한다.
# Given 상행역 : 판교역 / 하행역 : 양재역 / 길이 : 3 / 시간 : 1 구간이 존재하는 노선을 생성한다.
  Background: 지하철 노선 준비
    Given 지하철역들을 생성하고
      | name    |
      | 도곡역   |
      | 학여울역 |
      | 수서역   |
      | 개포동역 |
      | 판교역   |
      | 양재역   |
      | 수원역   |
    And 지하철 노선을 생성하고
      | name  | color  | startStation | endStation | distance | duration |
      | 분당선 | 노랑    | 도곡역        | 학여울역    | 6       |    4      |
      | 삼호선 | 주황    | 도곡역        | 개포동역    | 4       |    5      |
      | 신분당선 | 파랑   | 판교역       | 양재역      | 3       |    1      |
    And 지하철 구간을 생성하고
      | downStation| upStation | distance| duration | lineName |
      | 수서역       | 학여울역    | 10     |     5    | 분당선   |
      | 수서역       | 개포동역    | 8      |     5    | 삼호선   |

  Scenario: 경로가 다건일 경우, 최단 거리 경로 조회 성공
    When "수서역"부터 "도곡역"까지의 최단 "거리" 경로를 조회하면
    Then 경로에 있는 역 목록은 "수서역,개포동역,도곡역" 순서대로 구성된다
    And 경로의 소요 거리는 "12"이고 소요 시간은 "10"이다
    And 이용 요금은 "1350"원 이다

  Scenario: 경로가 다건일 경우, 최단 시간 경로 조회 성공
    When "수서역"부터 "도곡역"까지의 최단 "시간" 경로를 조회하면
    Then 경로에 있는 역 목록은 "수서역,학여울역,도곡역" 순서대로 구성된다
    And 경로의 소요 거리는 "16"이고 소요 시간은 "9"이다
    And 이용 요금은 "1450"원 이다

  Scenario: 노선이 다른 경로 조회
    When "학여울역"부터 "개포동역"까지의 최단 "거리" 경로를 조회하면
    Then 경로에 있는 역 목록은 "학여울역,도곡역,개포동역" 순서대로 구성된다
    And 경로의 소요 거리는 "10"이고 소요 시간은 "9"이다
    And 이용 요금은 "1250"원 이다

  Scenario: 경로가 존재하지 않으면 조회 실패
    When "학여울역"부터 "양재역"까지의 최단 "거리" 경로를 조회하면
    Then "경로가 존재하지 않습니다."라는 메시지를 반환한다

  Scenario: 출발역이나 도착역이 존재하지 않으면 조회 실패
    When "수원역"부터 "도곡역"까지의 최단 "거리" 경로를 조회하면
    Then "경로에 존재하지 않는 역입니다."라는 메시지를 반환한다

  Scenario: 출발역과 도착역이 같으면 조회 실패
    When "학여울역"부터 "학여울역"까지의 최단 "거리" 경로를 조회하면
    Then "출발역과 도착역이 같을 수 없습니다."라는 메시지를 반환한다
